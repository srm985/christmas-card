@import './constants';

@mixin render-helpers($i, $size: '') {
    .mt#{$size}--#{$i} {
        margin-top: #{$planck-length * $i};
    }

    .mr#{$size}--#{$i} {
        margin-right: #{$planck-length * $i};
    }

    .mb#{$size}--#{$i} {
        margin-bottom: #{$planck-length * $i};
    }

    .ml#{$size}--#{$i} {
        margin-left: #{$planck-length * $i};
    }

    .mx#{$size}--#{$i} {
        margin-right: #{$planck-length * $i};
        margin-left: #{$planck-length * $i};
    }

    .my#{$size}--#{$i} {
        margin-top: #{$planck-length * $i};
        margin-bottom: #{$planck-length * $i};
    }

    .m#{$size}--#{$i} {
        margin: #{$planck-length * $i};
    }

    .pt#{$size}--#{$i} {
        padding-top: #{$planck-length * $i};
    }

    .pr#{$size}--#{$i} {
        padding-right: #{$planck-length * $i};
    }

    .pb#{$size}--#{$i} {
        padding-bottom: #{$planck-length * $i};
    }

    .pl#{$size}--#{$i} {
        padding-left: #{$planck-length * $i};
    }

    .px#{$size}--#{$i} {
        padding-right: #{$planck-length * $i};
        padding-left: #{$planck-length * $i};
    }

    .py#{$size}--#{$i} {
        padding-top: #{$planck-length * $i};
        padding-bottom: #{$planck-length * $i};
    }

    .p#{$size}--#{$i} {
        padding: #{$planck-length * $i};
    }
}
@mixin generate-helpers($i) {
    @media only screen and (min-width: 0) {
        @include render-helpers($i);
    }
    @media only screen and (min-width: $breakpoint-small) {
        @include render-helpers($i, '-small');
    }
    @media only screen and (min-width: $breakpoint-medium) {
        @include render-helpers($i, '-medium');
    }
    @media only screen and (min-width: $breakpoint-large) {
        @include render-helpers($i, '-large');
    }
    @media only screen and (min-width: $breakpoint-extra-large) {
        @include render-helpers($i, '-extra-large');
    }
}

// Generate margin and padding classes.
@for $i from -5 through 15 {
    @include generate-helpers($i);
}

@include generate-helpers(0.5);
@include generate-helpers(-0.5);

.font-size--small {
    font-size: $font-size-small;
}

.font-size--regular {
    font-size: $font-size-regular;
}

.font-size--large {
    font-size: $font-size-large;
}

// Create color helper classes.
.color--blue {
    color: $color-blue;
}

.color--black {
    color: $color-black;
}

.color--green-primary {
    color: $color-green-primary;
}

.color--green-secondary {
    color: $color-green-secondary;
}

.color--orange {
    color: $color-orange;
}

.color--pink {
    color: $color-pink;
}

.color--white {
    color: $color-white;
}

.color--gray {
    color: $color-gray-dark;
}

// Font Weights
.font-weight--bold {
    font-weight: bold;
}

// Sizing Helpers
.width--full {
    display: inline-block;
    width: 100%;
}

// Text Helpers
.text-align--center {
    text-align: center;
}

.text-align--justify {
    text-align: justify;
}

.text--uppercase {
    text-transform: uppercase;
}

.text--italic {
    font-style: italic;
}

// Display Helpers
.display--inline {
    display: inline;
}

.display--inline-block {
    display: inline-block;
}
